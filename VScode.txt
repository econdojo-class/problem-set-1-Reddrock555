Task 1 code:

x = 5  # integer
y = 2.5  # float


addition = x + y
subtraction = y - x
multiplication = x * y
power = x ** 2
floor_division = x // 2

print("Addition (x + y):", addition)
print("Subtraction (y - x):", subtraction)
print("Multiplication (x * y):", multiplication)
print("x raised to the power of 2:", power)
print("Floor division (x // 2):", floor_division)

Results :
Addition (x + y): 7.5
Subtraction (y - x): -2.5
Multiplication (x * y): 12.5
x raised to the power of 2: 25
Floor division (x // 2): 2

Task 2 code :
my_list = [1, 2, 3, 4, 5]
my_list[2] = "hello"
my_list.append("world")
my_list.pop(0)
print("Final list:", my_list)

Results :
Final list: [2, 'hello', 4, 5, 'world']


Task 3 code :
# Create the dictionary
student_scores = {
    'Alice': 85,
    'Bob': 90,
    'Charlie': 78
}

# Add a new student 'David' with a score of 88
student_scores['David'] = 88

# Update 'Alice''s score to 95
student_scores['Alice'] = 95

# Delete 'Charlie' from the dictionary
del student_scores['Charlie']

print("Final dictionary:", student_scores)

Results :
Final dictionary: {'Alice': 95, 'Bob': 90, 'David': 88}



Task 4 code : 
# Define the function to calculate the area of a rectangle
def calculate_area(width, height):
    return width * height

# Call the function with width=5 and height=10
result = calculate_area(5, 10)

# Print the result
print("The area of the rectangle is:", result)

Results :
The area of the rectangle is: 50


Task 5 code :
# Define the Animal class
class Animal:
    def __init__(self, name):
        self.name = name
    
    def speak(self):
        print("The animal speaks")

# Define the Dog subclass that inherits from Animal
class Dog(Animal):
    def speak(self):
        print("Woof! Woof!")

# Create an instance of Dog with the name "Buddy"
buddy = Dog("Buddy")

# Call the speak method
buddy.speak()

Results :
Woof! Woof!
